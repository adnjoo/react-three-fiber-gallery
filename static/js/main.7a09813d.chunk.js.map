{"version":3,"sources":["shaders/HoverImageShader.js","index.js"],"names":["HoverImageShader","vertexShader","fragmentShader","uniforms","texture","type","value","imageAspectRatio","aspectRatio","opacity","hover","image","Image","_ref","url","props","Object","objectWithoutProperties","_excluded","_useMemo","useMemo","TextureLoader","load","slicedToArray","react_default","a","createElement","three","mesh","assign","onClick","e","console","log","attach","args","shaderMaterial","transparent","uniforms-texture-value","App","_useSpring","useSpring","pos","scale","rotation","config","mass","tension","friction","precision","_useSpring2","set","className","style","position","onMouseMove","_ref2","clientX","clientY","x","window","innerWidth","y","innerHeight","Math","PI","dist","pixelRatio","devicePixelRatio","background","camera","fov","render","document","getElementById"],"mappings":"2NAIIA,EAAmB,CACrBC,aAAY,6JASZC,eAAc,43CAkDdC,SAAU,CACRC,QAAS,CACPC,KAAM,IACNC,MAAO,IAETC,iBAAkB,CAChBF,KAAM,IACNC,MAAO,GAETE,YAAa,CACXH,KAAM,IACNC,MAAO,GAETG,QAAS,CACPJ,KAAM,IACNC,MAAO,GAETI,MAAO,CACLL,KAAM,IACNC,MAAO,uBC3EPK,EAAQ,6EAEd,SAASC,EAATC,GAAkC,IAAjBC,EAAiBD,EAAjBC,IAAQC,EAASC,OAAAC,EAAA,EAAAD,CAAAH,EAAAK,GAChCC,EAAkBC,kBAAQ,WAExB,MAAO,EADQ,IAAIC,iBACJC,KAAKR,KACnB,CAACA,IAHGV,EAAPY,OAAAO,EAAA,EAAAP,CAAAG,EAAA,MASA,OACEK,EAAAC,EAAAC,cAACC,EAAA,EAASC,KAAVZ,OAAAa,OAAA,GACKd,EADL,CAECe,QAAS,SAACC,GANXC,QAAQC,IAAI,kBAQVT,EAAAC,EAAAC,cAAA,uBAAqBQ,OAAO,WAAWC,KAAM,CAAC,EAAG,KACjDX,EAAAC,EAAAC,cAACC,EAAA,EAASS,eAAV,CAAyBF,OAAO,WAAWG,aAAW,EAACF,KAAM,CAACnC,GAAmBsC,yBAAwBlC,KAK/G,SAASmC,IACP,IAAAC,EAAqBC,YAAU,iBAAO,CACpCC,IAAK,CAAC,EAAG,EAAG,GACZC,MAAO,CAAC,EAAG,EAAG,GACdC,SAAU,CAAC,EAAG,EAAG,GACjBC,OAAQ,CAAEC,KAAM,GAAIC,QAAS,IAAMC,SAAU,IAAKC,UAAW,SAJ/DC,EAAAlC,OAAAO,EAAA,EAAAP,CAAAwB,EAAA,GAAOzB,EAAPmC,EAAA,GAAcC,EAAdD,EAAA,GAOA,OACE1B,EAAAC,EAAAC,cAAA,OACE0B,UAAU,OACVC,MAAO,CACLC,SAAU,YAEZC,YAAa,SAAAC,GAA0B,IAAvBC,EAAuBD,EAAvBC,QAASC,EAAcF,EAAdE,QACjBC,EAAKF,EAAUG,OAAOC,WAAc,EAAI,EACxCC,GAAMJ,EAAUE,OAAOG,YAAe,EAAI,EAEhDZ,EAAI,CACFT,IAAK,CAACiB,EAAG,EAAG,GACZhB,MAAO,CAAC,EAAQ,GAAJmB,EAAS,EAAQ,GAAJA,EAAS,GAClClB,SAAU,EAAEkB,GAAKE,KAAKC,GAAK,GAAK,GAAKN,GAAKK,KAAKC,GAAK,GAAK,GAAK,OAGlEzC,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACEC,WAAYP,OAAOQ,kBAAoB,EACvCf,MAAO,CACLgB,WAAY,WAGdC,OAAQ,CAAEC,IAAK,GAAIjB,SAAU,CAAC,EAAG,EAAG,KACpC9B,EAAAC,EAAAC,cAACd,EAADI,OAAAa,OAAA,CAAOf,IAAKH,GAAWI,MAM/ByD,iBAAOhD,EAAAC,EAAAC,cAACa,EAAD,MAASkC,SAASC,eAAe","file":"static/js/main.7a09813d.chunk.js","sourcesContent":["/**\n * @author TheFrost / https://codepen.io/frost084/full/OKZNRm\n */\n\nvar HoverImageShader = {\n  vertexShader: `\n    varying vec2 vUv; \n\n    void main() {\n      vUv = uv;\n\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n  `,\n  fragmentShader: `\n    precision highp float; \n\n    uniform sampler2D texture;\n    uniform float imageAspectRatio;\n    uniform float aspectRatio;\n    uniform float opacity;\n    uniform float hover;\n    varying vec2 vUv;\n\n    float exponentialInOut(float t) {\n      return t == 0.0 || t == 1.0 \n        ? t \n        : t < 0.5\n          ? +0.5 * pow(2.0, (20.0 * t) - 10.0)\n          : -0.5 * pow(2.0, 10.0 - (t * 20.0)) + 1.0;\n    } \n\n    void main() {\n      vec2 uv = vUv;\n\n      // fix aspectRatio\n      float u = imageAspectRatio/aspectRatio;\n      if(imageAspectRatio > aspectRatio) {\n        u = 1. / u;\n      }\n\n      uv.y *= u;\n      uv.y -= (u)/2.-.5;\n\n      // hover effect\n      float zoomLevel = .2;\n      float hoverLevel = exponentialInOut(min(1., (distance(vec2(.5), uv) * hover) + hover));\n      uv *= 1. - zoomLevel * hoverLevel;\n      uv += zoomLevel / 2. * hoverLevel;\n      uv = clamp(uv, 0., 1.);\n      vec4 color = texture2D(texture, uv);\n      if(hoverLevel > 0.) {\n        hoverLevel = 1.-abs(hoverLevel-.5)*2.;\n        //Pixel displace\n        uv.y += color.r * hoverLevel * .05;\n        color = texture2D(texture, uv);\n        // RGBshift\n        color.r = texture2D(texture, uv+(hoverLevel)*0.01).r;\n        color.g = texture2D(texture, uv-(hoverLevel)*0.01).g;\n      }\n\n      gl_FragColor = mix(vec4(1.,1.,1.,opacity), color, opacity);\n    }\n  `,\n  uniforms: {\n    texture: {\n      type: 't',\n      value: ''\n    },\n    imageAspectRatio: {\n      type: 'f',\n      value: 1.0\n    },\n    aspectRatio: {\n      type: 'f',\n      value: 1.0\n    },\n    opacity: {\n      type: 'f',\n      value: 1.0\n    },\n    hover: {\n      type: 'f',\n      value: 0.0\n    }\n  }\n}\n\nexport { HoverImageShader }\n","import { render } from 'react-dom'\nimport { TextureLoader } from 'three'\nimport { useSpring, animated } from 'react-spring/three'\nimport React, { useMemo } from 'react'\nimport { Canvas } from 'react-three-fiber'\nimport { HoverImageShader } from './shaders/HoverImageShader'\nimport './styles.css'\n\nconst image = 'https://raw.githubusercontent.com/adnjoo/artExplorer/main/assets/mona2.png'\n\nfunction Image({ url, ...props }) {\n  const [texture] = useMemo(() => {\n    const loader = new TextureLoader()\n    return [loader.load(url)]\n  }, [url])\n\n  const changeImage = () => {\n    console.log('changeImage')\n  }\n\n  return (\n    <animated.mesh\n     {...props}\n     onClick={(e)=>changeImage()}\n     >\n      <planeBufferGeometry attach=\"geometry\" args={[5, 7]} />\n      <animated.shaderMaterial attach=\"material\" transparent args={[HoverImageShader]} uniforms-texture-value={texture} />\n    </animated.mesh>\n  )\n}\n\nfunction App() {\n  const [props, set] = useSpring(() => ({\n    pos: [0, 0, 0],\n    scale: [1, 1, 1],\n    rotation: [0, 0, 0],\n    config: { mass: 10, tension: 1000, friction: 300, precision: 0.00001 }\n  }))\n\n  return (\n    <div\n      className=\"main\"\n      style={{\n        position: \"relative\"\n      }}\n      onMouseMove={({ clientX, clientY }) => {\n        const x = (clientX / window.innerWidth) * 2 - 1\n        const y = -(clientY / window.innerHeight) * 2 + 1\n\n        set({\n          pos: [x, 0, 0],\n          scale: [1 - y * 0.1, 1 - y * 0.1, 1],\n          rotation: [-y * (Math.PI / 3) * 0.3, x * (Math.PI / 3) * 0.3, 0]\n        })\n      }}>\n      <Canvas\n        pixelRatio={window.devicePixelRatio || 1}\n        style={{\n          background: '#272727',\n\n        }}\n        camera={{ fov: 75, position: [0, 0, 7] }}>\n        <Image url={image} {...props} />\n      </Canvas>\n    </div>\n  )\n}\n\nrender(<App />, document.getElementById('root'))\n"],"sourceRoot":""}